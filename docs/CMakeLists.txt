find_package(Doxygen)
if(NOT DOXYGEN_FOUND)
  message("Doxygen needs to be installed to generate documentation")
  return()
endif(DOXYGEN_FOUND)

set(DOXYGEN_QUIET YES)

set(DOXYGEN_EXCLUDE_PATTERNS
  */build/*
  */extern/*
)

find_package(Git)
if(GIT_EXECUTABLE)
  execute_process(
    COMMAND ${GIT_EXECUTABLE} describe --tags --dirty --match "v*"
    OUTPUT_STRIP_TRAILING_WHITESPACE
    OUTPUT_VARIABLE DOXYGEN_PROJECT_NUMBER
  )
endif()

execute_process(COMMAND
  ${CMAKE_COMMAND}
  -D SRC=${CMAKE_SOURCE_DIR}/src/xdgdirs_ver.h.in
  -D DST=${CMAKE_SOURCE_DIR}/src/xdgdirs_ver.h
  -P ${CMAKE_SOURCE_DIR}/src/GenerateVersion.cmake
)

if(NOT CMAKE_BUILD_TYPE STREQUAL "Debug")
  list(APPEND DOXYGEN_EXCLUDE_PATTERNS */src/xdgdirs.c)
endif()

set(DOXYGEN_HTML_EXTRA_STYLESHEET custom.css)
set(DOXYGEN_LAYOUT_FILE           layout.xml)

set(DOXYGEN_EXAMPLE_PATH ${PROJECT_SOURCE_DIR}/examples)
set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ${CMAKE_SOURCE_DIR}/README.md)

set(DOXYGEN_HTML_COLORSTYLE TOGGLE)

set(DOXYGEN_ALPHABETICAL_INDEX    NO)
set(DOXYGEN_ALWAYS_DETAILED_SEC   NO)
set(DOXYGEN_GENERATE_TREEVIEW     YES)
set(DOXYGEN_OPTIMIZE_OUTPUT_FOR_C YES)
set(DOXYGEN_REPEAT_BRIEF          NO)
set(DOXYGEN_SOURCE_BROWSER        YES)
set(DOXYGEN_STRIP_FROM_PATH       "${CMAKE_SOURCE_DIR}")

set(DOXYGEN_EXTRACT_ALL    YES)
set(DOXYGEN_EXTRACT_STATIC YES)

set(DOXYGEN_PREDEFINED         DOXYGEN)
set(DOXYGEN_EXCLUDE_SYMBOLS    DOXYGEN_*)
set(DOXYGEN_EXPAND_AS_DEFINED  DOXYGEN_UNNAMED)
set(DOXYGEN_MACRO_EXPANSION    YES)

doxygen_add_docs(docs ${CMAKE_SOURCE_DIR} ALL)
